/* Generated by Together */

package com.hzjc.wsstruts.vo;

import java.util.*;

/**
 * 针对Delphi的ClientDataSet定义的数据传输对象类
 * <p>Title: Hz2004</p>
 * <p>Description: 常住人口二代证Hz2004版</p>
 * <p>Copyright: Copyright (c) 2004</p>
 * <p>Company: HZJC</p>
 * @author Kansan Ku(kgb_hz@126.com)
 * @version 1.0
 */
public class CdsVO
    implements VO {

  private Map oldmap = null; //原始的Map数据,从库中取出来的映射集合,默认为空
  private Map curMap = null; //数据库中当前的数据集合,目前没有从库中去取,默认为空
  private Map newmap = null; //修改后的最新值集合,默认为空
  private Map map = null; //整合后的数据集合,默认为空

  //修改-添加-删除-原始(1 1 1 1)
  public final static int ROW_STATE_ADD = 4;
  public final static int ROW_STATE_DELETE = 2;
  public final static int ROW_STATE_UPDATE = 8;
  public final static int ROW_STATE_RETRIEVE = 1;
  private int rowstate = 1; //行数据的状态

  ////////////////////////////////////////////////////////////////////////////
  //Delphi的clientdataset中数据传入的处理
  ////////////////////////////////////////////////////////////////////////////
  public Map getOldmap() {
    return oldmap;
  }

  public void setOldmap(Map oldmap) {
    this.oldmap = oldmap;
  }

  protected Map getCurMap() {
    return curMap;
  }

  protected void setCurMap(Map curMap) {
    this.curMap = curMap;
  }

  public Map getNewmap() {
    return newmap;
  }

  public void setNewmap(Map newmap) {
    this.newmap = newmap;
  }

  public int getRowstate() {
    return rowstate;
  }

  public void setRowstate(int rowstate) {
    this.rowstate = rowstate;
  }

  /**
   * 如果数据的行状态是增加、删除、原始的数据则map=newmap
   * 否则，要整合原始和修改后的数据，即map = oldmap + newmap
   * @return
   */
  public Map getMap() {
    //得到整合后的值
    map = new HashMap();
    map = getNewmap();
    //如果行状态不是修改的数据互相赋值、转换处理
    if (getRowstate() == ROW_STATE_UPDATE) {
      map = getOldmap();
      //循环转换新的键值
      for (Iterator iter = getNewmap().entrySet().iterator(); iter.hasNext(); ) {
        Map.Entry entry = (Map.Entry) iter.next();
        //如果包括修改的键值，则修改之
        map.put(entry.getKey(), entry.getValue());
      }
    }
    return map;
  }

  /**
   *
   * @param map
   */
  protected void setMap(Map map) {
    this.map = map;
  }
  /////////////////////////////////////////////////////////////////////////////
}
